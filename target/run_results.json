{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.10.4", "generated_at": "2025-07-21T05:47:33.340433Z", "invocation_id": "134a7501-be1e-49a5-b077-1a06cc7cc688", "invocation_started_at": "2025-07-21T05:47:15.823753Z", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-21T05:47:19.639481Z", "completed_at": "2025-07-21T05:47:20.534683Z"}, {"name": "execute", "started_at": "2025-07-21T05:47:20.535002Z", "completed_at": "2025-07-21T05:47:21.679491Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 2.0411267280578613, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01bdd49b-0003-37d8-0000-000901029415"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.jaffle_shop.metricflow_time_spine", "compiled": true, "compiled_code": "-- metricflow_time_spine.sql\nwith\n\ndays as (\n\n    --for BQ adapters use \"DATE('01/01/2000','mm/dd/yyyy')\"\n    \n    with date_spine as\n(\n\n    \n\n\n\n\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * power(2, 0)\n     + \n    \n    p1.generated_number * power(2, 1)\n     + \n    \n    p2.generated_number * power(2, 2)\n     + \n    \n    p3.generated_number * power(2, 3)\n     + \n    \n    p4.generated_number * power(2, 4)\n     + \n    \n    p5.generated_number * power(2, 5)\n     + \n    \n    p6.generated_number * power(2, 6)\n     + \n    \n    p7.generated_number * power(2, 7)\n     + \n    \n    p8.generated_number * power(2, 8)\n     + \n    \n    p9.generated_number * power(2, 9)\n     + \n    \n    p10.generated_number * power(2, 10)\n     + \n    \n    p11.generated_number * power(2, 11)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n     cross join \n    \n    p as p11\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 3651\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n\n    dateadd(\n        day,\n        (row_number() over (order by 1) - 1),\n        \n\n    dateadd(\n        day,\n        -3650,\n        cast(convert_timezone('UTC', 'America/Los_Angeles',\n    cast(convert_timezone('UTC', current_timestamp()) as timestamp)\n) as date)\n        )\n\n\n        )\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= cast(\n\n    dateadd(\n        day,\n        1,\n        cast(convert_timezone('UTC', 'America/Los_Angeles',\n    cast(convert_timezone('UTC', current_timestamp()) as timestamp)\n) as date)\n        )\n\n as date)\n\n)\n\nselect * from filtered\n\n\n\n)\nselect\n    cast(d.date_day as timestamp) as date_day\nfrom\n    date_spine d\n\n\n\n),\n\ncast_to_date as (\n\n    select cast(date_day as date) as date_day\n\n    from days\n\n)\n\nselect * from cast_to_date", "relation_name": "ECOM.DEV.metricflow_time_spine", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-21T05:47:21.683906Z", "completed_at": "2025-07-21T05:47:21.686682Z"}, {"name": "execute", "started_at": "2025-07-21T05:47:21.686997Z", "completed_at": "2025-07-21T05:47:22.205117Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.5218868255615234, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01bdd49b-0003-37d9-0000-00090102a3f1"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.jaffle_shop.stg_customers", "compiled": true, "compiled_code": "with\n\nsource as (\n\n    select * from ECOM.raw.raw_customers\n\n),\n\nrenamed as (\n\n    select\n\n        ----------  ids\n        id as customer_id,\n\n        ---------- text\n        name as customer_name\n\n    from source\n\n)\n\nselect * from renamed", "relation_name": "ECOM.DEV.stg_customers", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-21T05:47:22.208548Z", "completed_at": "2025-07-21T05:47:22.214277Z"}, {"name": "execute", "started_at": "2025-07-21T05:47:22.214653Z", "completed_at": "2025-07-21T05:47:22.739540Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.5318071842193604, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01bdd49b-0003-37da-0000-00090102c451"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.jaffle_shop.stg_locations", "compiled": true, "compiled_code": "with\n\nsource as (\n\n    select * from ECOM.raw.raw_stores\n\n),\n\nrenamed as (\n\n    select\n\n        ----------  ids\n        id as location_id,\n\n        ---------- text\n        name as location_name,\n\n        ---------- numerics\n        tax_rate,\n\n        ---------- timestamps\n        date_trunc('day', opened_at) as opened_date\n\n    from source\n\n)\n\nselect * from renamed", "relation_name": "ECOM.DEV.stg_locations", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-21T05:47:22.744662Z", "completed_at": "2025-07-21T05:47:22.749547Z"}, {"name": "execute", "started_at": "2025-07-21T05:47:22.749982Z", "completed_at": "2025-07-21T05:47:23.212701Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.46932506561279297, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01bdd49b-0003-37dc-0000-00090102e32d"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.jaffle_shop.stg_order_items", "compiled": true, "compiled_code": "with\n\nsource as (\n\n    select * from ECOM.raw.raw_items\n\n),\n\nrenamed as (\n\n    select\n\n        ----------  ids\n        id as order_item_id,\n        order_id,\n        sku as product_id\n\n    from source\n\n)\n\nselect * from renamed", "relation_name": "ECOM.DEV.stg_order_items", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-21T05:47:23.217912Z", "completed_at": "2025-07-21T05:47:23.227909Z"}, {"name": "execute", "started_at": "2025-07-21T05:47:23.228313Z", "completed_at": "2025-07-21T05:47:23.867550Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.6508750915527344, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01bdd49b-0003-37ce-0000-00090102b485"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.jaffle_shop.stg_orders", "compiled": true, "compiled_code": "with\n\nsource as (\n\n    select * from ECOM.raw.raw_orders\n\n),\n\nrenamed as (\n\n    select\n\n        ----------  ids\n        id as order_id,\n        store_id as location_id,\n        customer as customer_id,\n\n        ---------- numerics\n        subtotal as subtotal_cents,\n        tax_paid as tax_paid_cents,\n        order_total as order_total_cents,\n        (subtotal / 100)::numeric(16, 2) as subtotal,\n        (tax_paid / 100)::numeric(16, 2) as tax_paid,\n        (order_total / 100)::numeric(16, 2) as order_total,\n\n        ---------- timestamps\n        date_trunc('day', ordered_at) as ordered_at\n\n    from source\n\n)\n\nselect * from renamed", "relation_name": "ECOM.DEV.stg_orders", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-21T05:47:23.872872Z", "completed_at": "2025-07-21T05:47:23.879557Z"}, {"name": "execute", "started_at": "2025-07-21T05:47:23.879993Z", "completed_at": "2025-07-21T05:47:24.316858Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.44519591331481934, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01bdd49b-0003-37d8-0000-000901029419"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.jaffle_shop.stg_products", "compiled": true, "compiled_code": "with\n\nsource as (\n\n    select * from ECOM.raw.raw_products\n\n),\n\nrenamed as (\n\n    select\n\n        ----------  ids\n        sku as product_id,\n\n        ---------- text\n        name as product_name,\n        type as product_type,\n        description as product_description,\n\n\n        ---------- numerics\n        (price / 100)::numeric(16, 2) as product_price,\n\n        ---------- booleans\n        coalesce(type = 'jaffle', false) as is_food_item,\n\n        coalesce(type = 'beverage', false) as is_drink_item\n\n    from source\n\n)\n\nselect * from renamed", "relation_name": "ECOM.DEV.stg_products", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-21T05:47:24.322100Z", "completed_at": "2025-07-21T05:47:24.337771Z"}, {"name": "execute", "started_at": "2025-07-21T05:47:24.338167Z", "completed_at": "2025-07-21T05:47:24.793467Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.47236204147338867, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01bdd49b-0003-37d9-0000-00090102a3f5"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.jaffle_shop.stg_supplies", "compiled": true, "compiled_code": "with\n\nsource as (\n\n    select * from ECOM.raw.raw_supplies\n\n),\n\nrenamed as (\n\n    select\n\n        ----------  ids\n        md5(cast(coalesce(cast(id as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(sku as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as supply_uuid,\n        id as supply_id,\n        sku as product_id,\n\n        ---------- text\n        name as supply_name,\n\n        ---------- numerics\n        (cost / 100)::numeric(16, 2) as supply_cost,\n\n        ---------- booleans\n        perishable as is_perishable_supply\n\n    from source\n\n)\n\nselect * from renamed", "relation_name": "ECOM.DEV.stg_supplies", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-21T05:47:24.796385Z", "completed_at": "2025-07-21T05:47:24.799156Z"}, {"name": "execute", "started_at": "2025-07-21T05:47:24.799435Z", "completed_at": "2025-07-21T05:47:25.950781Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 1.1551830768585205, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01bdd49b-0003-37da-0000-00090102c455"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.jaffle_shop.locations", "compiled": true, "compiled_code": "with\n\nlocations as (\n\n    select * from ECOM.DEV.stg_locations\n\n)\n\nselect * from locations", "relation_name": "ECOM.DEV.locations", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-21T05:47:25.956180Z", "completed_at": "2025-07-21T05:47:25.962173Z"}, {"name": "execute", "started_at": "2025-07-21T05:47:25.962593Z", "completed_at": "2025-07-21T05:47:27.152220Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 1.1971511840820312, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01bdd49b-0003-37dc-0000-00090102e331"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.jaffle_shop.products", "compiled": true, "compiled_code": "with\n\nproducts as (\n\n    select * from ECOM.DEV.stg_products\n\n)\n\nselect * from products", "relation_name": "ECOM.DEV.products", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-21T05:47:27.155251Z", "completed_at": "2025-07-21T05:47:27.158518Z"}, {"name": "execute", "started_at": "2025-07-21T05:47:27.158806Z", "completed_at": "2025-07-21T05:47:29.182691Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 2.028186798095703, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01bdd49b-0003-37ce-0000-00090102b489"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.jaffle_shop.order_items", "compiled": true, "compiled_code": "with\n\norder_items as (\n\n    select * from ECOM.DEV.stg_order_items\n\n),\n\n\norders as (\n\n    select * from ECOM.DEV.stg_orders\n\n),\n\nproducts as (\n\n    select * from ECOM.DEV.stg_products\n\n),\n\nsupplies as (\n\n    select * from ECOM.DEV.stg_supplies\n\n),\n\norder_supplies_summary as (\n\n    select\n        product_id,\n\n        sum(supply_cost) as supply_cost\n\n    from supplies\n\n    group by 1\n\n),\n\njoined as (\n\n    select\n        order_items.*,\n\n        orders.ordered_at,\n\n        products.product_name,\n        products.product_price,\n        products.is_food_item,\n        products.is_drink_item,\n\n        order_supplies_summary.supply_cost\n\n    from order_items\n\n    left join orders on order_items.order_id = orders.order_id\n\n    left join products on order_items.product_id = products.product_id\n\n    left join order_supplies_summary\n        on order_items.product_id = order_supplies_summary.product_id\n\n)\n\nselect * from joined", "relation_name": "ECOM.DEV.order_items", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-21T05:47:29.188714Z", "completed_at": "2025-07-21T05:47:29.193449Z"}, {"name": "execute", "started_at": "2025-07-21T05:47:29.193880Z", "completed_at": "2025-07-21T05:47:29.976319Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.78885817527771, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01bdd49b-0003-37d8-0000-00090102941d"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.jaffle_shop.supplies", "compiled": true, "compiled_code": "with\n\nsupplies as (\n\n    select * from ECOM.DEV.stg_supplies\n\n)\n\nselect * from supplies", "relation_name": "ECOM.DEV.supplies", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-21T05:47:29.981096Z", "completed_at": "2025-07-21T05:47:29.988492Z"}, {"name": "execute", "started_at": "2025-07-21T05:47:29.988943Z", "completed_at": "2025-07-21T05:47:31.579600Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 1.5998129844665527, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01bdd49b-0003-37d9-0000-00090102a3f9"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.jaffle_shop.orders", "compiled": true, "compiled_code": "with\n\norders as (\n\n    select * from ECOM.DEV.stg_orders\n\n),\n\norder_items as (\n\n    select * from ECOM.DEV.order_items\n\n),\n\norder_items_summary as (\n\n    select\n        order_id,\n\n        sum(supply_cost) as order_cost,\n        sum(product_price) as order_items_subtotal,\n        count(order_item_id) as count_order_items,\n        sum(\n            case\n                when is_food_item then 1\n                else 0\n            end\n        ) as count_food_items,\n        sum(\n            case\n                when is_drink_item then 1\n                else 0\n            end\n        ) as count_drink_items\n\n    from order_items\n\n    group by 1\n\n),\n\ncompute_booleans as (\n\n    select\n        orders.*,\n\n        order_items_summary.order_cost,\n        order_items_summary.order_items_subtotal,\n        order_items_summary.count_food_items,\n        order_items_summary.count_drink_items,\n        order_items_summary.count_order_items,\n        order_items_summary.count_food_items > 0 as is_food_order,\n        order_items_summary.count_drink_items > 0 as is_drink_order\n\n    from orders\n\n    left join\n        order_items_summary\n        on orders.order_id = order_items_summary.order_id\n\n),\n\ncustomer_order_count as (\n\n    select\n        *,\n\n        row_number() over (\n            partition by customer_id\n            order by ordered_at asc\n        ) as customer_order_number\n\n    from compute_booleans\n\n)\n\nselect * from customer_order_count", "relation_name": "ECOM.DEV.orders", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-21T05:47:31.585455Z", "completed_at": "2025-07-21T05:47:31.591669Z"}, {"name": "execute", "started_at": "2025-07-21T05:47:31.592168Z", "completed_at": "2025-07-21T05:47:32.754602Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 1.1702139377593994, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01bdd49b-0003-37da-0000-00090102c459"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.jaffle_shop.customers", "compiled": true, "compiled_code": "with\n\ncustomers as (\n\n    select * from ECOM.DEV.stg_customers\n\n),\n\norders as (\n\n    select * from ECOM.DEV.orders\n\n),\n\ncustomer_orders_summary as (\n\n    select\n        orders.customer_id,\n\n        count(distinct orders.order_id) as count_lifetime_orders,\n        count(distinct orders.order_id) > 1 as is_repeat_buyer,\n        min(orders.ordered_at) as first_ordered_at,\n        max(orders.ordered_at) as last_ordered_at,\n        sum(orders.subtotal) as lifetime_spend_pretax,\n        sum(orders.tax_paid) as lifetime_tax_paid,\n        sum(orders.order_total) as lifetime_spend\n\n    from orders\n\n    group by 1\n\n),\n\njoined as (\n\n    select\n        customers.*,\n\n        customer_orders_summary.count_lifetime_orders,\n        customer_orders_summary.first_ordered_at,\n        customer_orders_summary.last_ordered_at,\n        customer_orders_summary.lifetime_spend_pretax,\n        customer_orders_summary.lifetime_tax_paid,\n        customer_orders_summary.lifetime_spend,\n\n        case\n            when customer_orders_summary.is_repeat_buyer then 'returning'\n            else 'new'\n        end as customer_type\n\n    from customers\n\n    left join customer_orders_summary\n        on customers.customer_id = customer_orders_summary.customer_id\n\n)\n\nselect * from joined", "relation_name": "ECOM.DEV.customers", "batch_results": null}], "elapsed_time": 16.632508993148804, "args": {"profiles_dir": "/Users/macos/.dbt", "source_freshness_run_project_hooks": true, "state_modified_compare_more_unrendered_values": false, "log_file_max_bytes": 10485760, "require_explicit_package_overrides_for_builtin_materializations": true, "log_level_file": "debug", "cache_selected_only": false, "require_all_warnings_handled_by_warn_error": false, "which": "run", "printer_width": 80, "populate_cache": true, "show_resource_report": false, "introspect": true, "defer": false, "send_anonymous_usage_stats": true, "use_fast_test_edges": false, "static_parser": true, "print": true, "require_nested_cumulative_type_params": false, "favor_state": false, "log_level": "info", "warn_error_options": {"error": [], "warn": [], "silence": []}, "state_modified_compare_vars": false, "log_format_file": "debug", "log_path": "/Users/macos/Projects/dbt-demo/jaffle-shop-main/logs", "partial_parse": true, "invocation_command": "dbt run", "project_dir": "/Users/macos/Projects/dbt-demo/jaffle-shop-main", "vars": {}, "empty": false, "partial_parse_file_diff": true, "macro_debugging": false, "write_json": true, "upload_to_artifacts_ingest_api": false, "validate_macro_args": false, "exclude": [], "use_colors_file": true, "require_batched_execution_for_custom_microbatch_strategy": false, "require_yaml_configuration_for_mf_time_spines": false, "indirect_selection": "eager", "select": [], "skip_nodes_if_on_run_start_fails": false, "use_colors": true, "log_format": "default", "quiet": false, "version_check": true, "strict_mode": false, "require_resource_names_without_spaces": true, "show_all_deprecations": false}}